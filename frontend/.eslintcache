[{"C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\index.tsx":"1","C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\App.tsx":"3","C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\components\\RegisterReaderForm.tsx":"4","C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\services\\TaskService.ts":"5","C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\services\\LocalStorageService.ts":"6","C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\services\\ProcessService.ts":"7","C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\components\\GenericForm.tsx":"8","C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\components\\GenericFormField.tsx":"9"},{"size":608,"mtime":1608157775079,"results":"10","hashOfConfig":"11"},{"size":440,"mtime":1608067546173,"results":"12","hashOfConfig":"11"},{"size":389,"mtime":1608158391826,"results":"13","hashOfConfig":"11"},{"size":1577,"mtime":1608158016802,"results":"14","hashOfConfig":"11"},{"size":998,"mtime":1608157784590,"results":"15","hashOfConfig":"11"},{"size":353,"mtime":1608153828268,"results":"16","hashOfConfig":"11"},{"size":771,"mtime":1608157120643,"results":"17","hashOfConfig":"11"},{"size":1028,"mtime":1608153828265,"results":"18","hashOfConfig":"11"},{"size":2656,"mtime":1608153828265,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"9e822k",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\index.tsx",[],["40","41"],"C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\App.tsx",[],"C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\components\\RegisterReaderForm.tsx",["42"],"import React, { SyntheticEvent, useEffect, useState } from 'react';\r\nimport { FormVariables } from '../interfaces';\r\nimport LocalStorageService from '../services/LocalStorageService';\r\nimport ProcessService from '../services/ProcessService';\r\nimport TaskService from '../services/TaskService';\r\nimport GenericForm from './GenericForm';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst RegisterReaderForm: React.FC = () => {\r\n  const [formState, setFormState] = useState<FormVariables>({ variables: {} });\r\n  const [taskId, setTaskId] = useState<string>('');\r\n  const history = useHistory()\r\n  useEffect(() => {\r\n    const getFormVariables = async () => {\r\n      let processId = LocalStorageService.getProcessId();\r\n      if (processId === null || processId === 'undefined') {\r\n        processId = await ProcessService.startProcess('registerReader');\r\n      }\r\n      let activeTaskId = await ProcessService.getActiveTaskId(processId);\r\n      if (activeTaskId) {\r\n        setFormState(await TaskService.getTaskFormVariables(activeTaskId));\r\n        setTaskId(activeTaskId);\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n\r\n    };\r\n    getFormVariables();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    await TaskService.completeTask(taskId, formState);\r\n    window.location.reload()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <GenericForm\r\n        formState={formState}\r\n        setFormState={setFormState}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterReaderForm;\r\n","C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\services\\TaskService.ts",[],"C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\services\\LocalStorageService.ts",[],"C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\services\\ProcessService.ts",[],"C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\components\\GenericForm.tsx",[],"C:\\Users\\Marko\\Desktop\\UPP2020\\frontend\\src\\components\\GenericFormField.tsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":29,"column":6,"nodeType":"49","endLine":29,"endColumn":8,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [history]",{"range":"56","text":"57"},[1177,1179],"[history]"]